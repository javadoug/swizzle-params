{"version":3,"sources":["../src/file-system.js"],"names":["swizzleSourceFiles","saveSwizzleConfig","loadSwizzleConfig","loadStacksFromJsonFile","loadRcConfig","readJsonFile","writeJsonFile","getRcFilePathsIfExists","getSwizzleJsonFilePath","isFile","file","pathExistsSync","params","files","replaceList","Object","keys","reduce","list","name","value","JSON","stringify","find","RegExp","withValue","push","forEach","mask","maskRegExp","text","readFileSync","masked","replace","updated","modified","param","unmasked","writeFileSync","console","log","conf","swizzleJson","rc","assign","stacks","stackName","json","stack","entry","length","rcFile","filePath","map","stacksFile","update","rcFiles","test","resolve","parse","outputJsonSync","spaces","paths","localRc","process","cwd","homeRc","sfs"],"mappings":";;;;;;QAWgBA,kB,GAAAA,kB;QAwBAC,iB,GAAAA,iB;QAyCAC,iB,GAAAA,iB;QAcAC,sB,GAAAA,sB;QAqBAC,Y,GAAAA,Y;QAsBAC,Y,GAAAA,Y;QAIAC,a,GAAAA,a;QAIAC,sB,GAAAA,sB;QAaAC,sB,GAAAA,sB;;AA1JhB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEO,IAAMC,0BAAS,SAATA,MAAS,CAACC,IAAD;AAAA,QAAU,kBAAIC,cAAJ,CAAmBD,IAAnB,CAAV;AAAA,CAAf;;AAEA,SAASV,kBAAT,OAA6C;AAAA,KAAhBY,MAAgB,QAAhBA,MAAgB;AAAA,KAARC,KAAQ,QAARA,KAAQ;;AACnD,KAAMC,cAAcC,OAAOC,IAAP,CAAYJ,MAAZ,EAAoBK,MAApB,CAA2B,UAACC,IAAD,EAAOC,IAAP,EAAgB;AAC9D,MAAMC,QAAQC,KAAKC,SAAL,CAAeV,OAAOO,IAAP,CAAf,CAAd;AACA,MAAMI,OAAO,IAAIC,MAAJ,OAAeL,IAAf,kBAAkC,GAAlC,CAAb;AACA,MAAMM,kBAAgBN,IAAhB,WAA0BC,KAAhC;AACAF,OAAKQ,IAAL,CAAU,EAACH,UAAD,EAAOE,oBAAP,EAAV;AACA,SAAOP,IAAP;AACA,EANmB,EAMjB,EANiB,CAApB;AAOAL,OAAMc,OAAN,CAAc,UAACjB,IAAD,EAAU;AACvB;AACA;AACA,MAAMkB,kCAAN;AACA,MAAMC,aAAa,IAAIL,MAAJ,CAAWI,IAAX,EAAiB,GAAjB,CAAnB;AACA,MAAME,OAAO,aAAGC,YAAH,CAAgBrB,IAAhB,EAAsB,MAAtB,CAAb;AACA,MAAMsB,SAASF,KAAKG,OAAL,CAAa,MAAb,EAAqBL,IAArB,CAAf;AACA,MAAMM,UAAUpB,YAAYG,MAAZ,CAAmB,UAACkB,QAAD,EAAWC,KAAX,EAAqB;AACvD,UAAOD,SAASF,OAAT,CAAiBG,MAAMb,IAAvB,EAA6Ba,MAAMX,SAAnC,CAAP;AACA,GAFe,EAEbO,MAFa,CAAhB;AAGA,MAAMK,WAAWH,QAAQD,OAAR,CAAgBJ,UAAhB,EAA4B,KAA5B,CAAjB;AACA,eAAGS,aAAH,CAAiB5B,IAAjB,EAAuB2B,QAAvB,EAAiC,MAAjC;AACAE,UAAQC,GAAR,CAAY,UAAZ,EAAwB9B,IAAxB;AACA,EAbD;AAcA;;AAEM,SAAST,iBAAT,QAAyC;AAAA,KAAbwC,IAAa,SAAbA,IAAa;AAAA,KAAP/B,IAAO,SAAPA,IAAO;;AAC/C,KAAMgC,cAAc,sBAAKD,IAAL,EAAW,CAAC,OAAD,EAAU,QAAV,EAAoB,WAApB,CAAX,CAApB;AACA,KAAME,KAAK5B,OAAO6B,MAAP,CAAc,EAAd,EAAkBH,KAAKE,EAAvB,EAA2B,EAACE,QAAQ,EAAT,EAA3B,CAAX;AACAH,aAAYG,MAAZ,GAAqB,EAArB;AACA,KAAIJ,KAAKI,MAAT,EAAiB;AAChB9B,SAAOC,IAAP,CAAYyB,KAAKI,MAAjB,EAAyBlB,OAAzB,CAAiC,UAACmB,SAAD,EAAe;AAC/C,OAAIC,OAAO,EAACF,QAAQ,EAAT,EAAX;AACA,OAAMG,QAAQP,KAAKI,MAAL,CAAYC,SAAZ,CAAd;AACA,OAAMG,4BAAUH,SAAV,EAAsBE,MAAMpC,MAA5B,CAAN;AACA;AACA,OAAIoC,MAAMtC,IAAN,IAAcsC,MAAMtC,IAAN,KAAeA,IAAjC,EAAuC;AACtC,QAAID,OAAOuC,MAAMtC,IAAb,CAAJ,EAAwB;AACvBqC,YAAO1C,aAAa,EAACK,MAAMsC,MAAMtC,IAAb,EAAb,CAAP;AACA;AACD,QAAI,CAACqC,KAAKF,MAAV,EAAkB;AACjBE,UAAKF,MAAL,GAAc,EAAd;AACA;AACD9B,WAAO6B,MAAP,CAAcG,KAAKF,MAAnB,EAA2BI,KAA3B;AACA3C,kBAAc,EAACI,MAAMsC,MAAMtC,IAAb,EAAmBqC,UAAnB,EAAd;AACAJ,OAAGE,MAAH,CAAUC,SAAV,IAAuB,EAACpC,MAAMsC,MAAMtC,IAAb,EAAvB;AACA,IAVD,MAUO;AACN,0BAAagC,YAAYG,MAAzB,EAAiCI,KAAjC;AACA;AACD,GAlBD;AAmBA;AACD,KAAIlC,OAAOC,IAAP,CAAY2B,GAAGE,MAAf,EAAuBK,MAAvB,KAAkC,CAAtC,EAAyC;AACxC,SAAOP,GAAGE,MAAV;AACA,EAFD,MAEO;AACN;AACA,MAAMM,SAASR,GAAGS,QAAH,IAAe,YAA9B;AACA9C,gBAAc,EAACI,MAAMyC,MAAP,EAAeJ,MAAMJ,EAArB,EAAd;AACA;AACD,KAAI,CAACjC,IAAL,EAAW;AACVA,SAAO,gBAAP;AACA;AACD,KAAIK,OAAOC,IAAP,CAAY0B,YAAYG,MAAxB,EAAgCK,MAAhC,KAA2C,CAA/C,EAAkD;AACjD,SAAOR,YAAYG,MAAnB;AACA;AACDvC,eAAc,EAACI,UAAD,EAAOqC,MAAML,WAAb,EAAd;AACA;;AAEM,SAASxC,iBAAT,QAAuC;AAAA,KAAXQ,IAAW,SAAXA,IAAW;AAAA,KAALiC,EAAK,SAALA,EAAK;;AAC7C,KAAIlC,OAAOC,IAAP,CAAJ,EAAkB;AACjB,MAAMgC,eAAc,sBAAa,0BAAb,EAA4BrC,aAAa,EAACK,UAAD,EAAb,CAA5B,CAApB;AACAgC,eAAYG,MAAZ,GAAqB1C,uBAAuB,EAACO,UAAD,EAAvB,CAArB;AACAgC,eAAYG,MAAZ,GAAqB,sBAAa,EAAb,EAAiBF,GAAGE,MAApB,EAA4BH,aAAYG,MAAxC,CAArB;AACAH,eAAYC,EAAZ,GAAiB,sBAAKA,EAAL,EAAS,QAAT,CAAjB;AACAD,eAAYU,QAAZ,GAAuB1C,IAAvB;AACA,SAAOgC,YAAP;AACA;AACD,KAAMA,cAAc,0BAApB;AACAA,aAAYG,MAAZ,GAAqB,sBAAa,EAAb,EAAiBF,GAAGE,MAApB,CAArB;AACA,QAAOH,WAAP;AACA;;AAEM,SAASvC,sBAAT,QAAwC;AAAA,KAAPO,IAAO,SAAPA,IAAO;;AAC9C,KAAMqC,OAAO1C,aAAa,EAACK,UAAD,EAAb,CAAb;AACA,KAAMmC,SAASE,KAAKF,MAAL,GAAcE,KAAKF,MAAnB,GAA4B,EAA3C;AACA,QAAO9B,OAAOC,IAAP,CAAY6B,MAAZ,EAAoB5B,MAApB,CAA2B,UAACoC,GAAD,EAAMP,SAAN,EAAoB;AACrD,MAAME,QAAQH,OAAOC,SAAP,CAAd;AACA,MAAIE,MAAMtC,IAAV,EAAgB;AACf,OAAM4C,aAAajD,aAAa,EAACK,MAAMsC,MAAMtC,IAAb,EAAb,CAAnB;AACA,OAAM6C,SAASxC,OAAOC,IAAP,CAAYsC,WAAWT,MAAvB,EAA+B5B,MAA/B,CAAsC,UAACoC,GAAD,EAAMP,SAAN,EAAoB;AACxE,QAAMlC,SAAS0C,WAAWT,MAAX,CAAkBC,SAAlB,CAAf;AACA,QAAMG,4BAAUH,SAAV,EAAsB,EAAClC,cAAD,EAASF,MAAMsC,MAAMtC,IAArB,EAAtB,CAAN;AACA,WAAO,sBAAauC,KAAb,EAAoBI,GAApB,CAAP;AACA,IAJc,EAIZ,EAJY,CAAf;AAKA,UAAO,sBAAaA,GAAb,EAAkBE,MAAlB,CAAP;AACA,GARD,MAQO;AACN,OAAM3C,SAASoC,MAAMpC,MAAN,GAAeoC,MAAMpC,MAArB,GAA8BoC,KAA7C;AACA,OAAMC,4BAAUH,SAAV,EAAsB,EAAClC,cAAD,EAASF,UAAT,EAAtB,CAAN;AACA,UAAO,sBAAauC,KAAb,EAAoBI,GAApB,CAAP;AACA;AACD,EAfM,EAeJ,EAfI,CAAP;AAgBA;;AAEM,SAASjD,YAAT,QAAiC;AAAA,KAAVoD,OAAU,SAAVA,OAAU;;AACvC,KAAMb,KAAK,EAACE,QAAQ,EAAT,EAAX;AACA,KAAI,EAAEW,WAAWA,QAAQN,MAAR,KAAmB,CAAhC,CAAJ,EAAwC;AACvC,SAAOP,EAAP;AACA;AACDa,SAAQvC,MAAR,CAAe,UAAC0B,EAAD,EAAKjC,IAAL,EAAc;AAC5B,MAAID,OAAOC,IAAP,CAAJ,EAAkB;AACjB,OAAI,OAAO+C,IAAP,CAAY/C,IAAZ,CAAJ,EAAuB;AACtBA,WAAO,eAAKgD,OAAL,CAAa,0BAAb,EAAqBhD,KAAKuB,OAAL,CAAa,MAAb,EAAqB,EAArB,CAArB,CAAP;AACA;AACDU,MAAGjC,IAAH,GAAUA,IAAV;AACA;AACA;AACA;AACA;AACA,UAAO,sBAAaiC,EAAb,EAAiBxC,uBAAuB,EAACO,UAAD,EAAvB,CAAjB,CAAP;AACA;AACD,SAAOiC,EAAP;AACA,EAbD,EAaGA,GAAGE,MAbN;AAcA,QAAOF,EAAP;AACA;;AAEM,SAAStC,YAAT,QAA8B;AAAA,KAAPK,IAAO,SAAPA,IAAO;;AACpC,QAAOW,KAAKsC,KAAL,CAAW,aAAG5B,YAAH,CAAgBrB,IAAhB,EAAsB,MAAtB,CAAX,CAAP;AACA;;AAEM,SAASJ,aAAT,QAAqC;AAAA,KAAbI,IAAa,SAAbA,IAAa;AAAA,KAAPqC,IAAO,SAAPA,IAAO;;AAC3C,QAAO,kBAAIa,cAAJ,CAAmBlD,IAAnB,EAAyBqC,IAAzB,EAA+B,EAACc,QAAQ,IAAT,EAA/B,CAAP;AACA;;AAEM,SAAStD,sBAAT,GAAkC;AACxC,KAAMuD,QAAQ,EAAd;AACA,KAAMC,UAAU,eAAKL,OAAL,CAAaM,QAAQC,GAAR,EAAb,EAA4B,YAA5B,CAAhB;AACA,KAAIxD,OAAOsD,OAAP,CAAJ,EAAqB;AACpBD,QAAMpC,IAAN,CAAWqC,OAAX;AACA;AACD,KAAMG,SAAS,eAAKR,OAAL,CAAa,0BAAb,EAAqB,YAArB,CAAf;AACA,KAAIjD,OAAOyD,MAAP,CAAJ,EAAoB;AACnBJ,QAAMpC,IAAN,CAAWwC,MAAX;AACA;AACD,QAAOJ,KAAP;AACA;;AAEM,SAAStD,sBAAT,GAAkC;AACxC,QAAO,eAAKkD,OAAL,CAAaM,QAAQC,GAAR,EAAb,EAA4B,cAA5B,CAAP;AACA;;AAEM,IAAME,oBAAM;AAClB1D,eADkB;AAElBT,uCAFkB;AAGlBC,qCAHkB;AAIlBC,qCAJkB;AAKlBE,2BALkB;AAMlBC,2BANkB;AAOlBC,6BAPkB;AAQlBC,+CARkB;AASlBC;AATkB,CAAZ","file":"file-system.js","sourcesContent":["import fs from 'fs'\nimport fsx from 'fs-extra'\nimport home from 'os-homedir'\nimport path from 'path'\nimport {defaultConf} from './config'\nimport defaultsDeep from 'lodash.defaultsdeep'\nimport omit from 'lodash.omit'\nimport pick from 'lodash.pick'\n\nexport const isFile = (file) => fsx.pathExistsSync(file)\n\nexport function swizzleSourceFiles({params, files}) {\n\tconst replaceList = Object.keys(params).reduce((list, name) => {\n\t\tconst value = JSON.stringify(params[name])\n\t\tconst find = new RegExp(`\"${name}\":\\\\s*\".*?\"`, 'g')\n\t\tconst withValue = `\"${name}\": ${value}`\n\t\tlist.push({find, withValue})\n\t\treturn list\n\t}, [])\n\tfiles.forEach((file) => {\n\t\t// support nested quotes by masking escaped double quotes\n\t\t// replace \"<name>\": \".*?\" with \"<name>\": \"<value>\"\n\t\tconst mask = `«MaskedDoubleQuote»`\n\t\tconst maskRegExp = new RegExp(mask, 'g')\n\t\tconst text = fs.readFileSync(file, 'utf8')\n\t\tconst masked = text.replace(/\\\\\"/g, mask)\n\t\tconst updated = replaceList.reduce((modified, param) => {\n\t\t\treturn modified.replace(param.find, param.withValue)\n\t\t}, masked)\n\t\tconst unmasked = updated.replace(maskRegExp, '\\\\\"')\n\t\tfs.writeFileSync(file, unmasked, 'utf8')\n\t\tconsole.log('swizzled', file)\n\t})\n}\n\nexport function saveSwizzleConfig({conf, file}) {\n\tconst swizzleJson = pick(conf, ['files', 'params', 'stackName'])\n\tconst rc = Object.assign({}, conf.rc, {stacks: {}})\n\tswizzleJson.stacks = {}\n\tif (conf.stacks) {\n\t\tObject.keys(conf.stacks).forEach((stackName) => {\n\t\t\tlet json = {stacks: {}}\n\t\t\tconst stack = conf.stacks[stackName]\n\t\t\tconst entry = {[stackName]: stack.params}\n\t\t\t// if this is the project ./swizzle.json file then add to config\n\t\t\tif (stack.file && stack.file !== file) {\n\t\t\t\tif (isFile(stack.file)) {\n\t\t\t\t\tjson = readJsonFile({file: stack.file})\n\t\t\t\t}\n\t\t\t\tif (!json.stacks) {\n\t\t\t\t\tjson.stacks = {}\n\t\t\t\t}\n\t\t\t\tObject.assign(json.stacks, entry)\n\t\t\t\twriteJsonFile({file: stack.file, json})\n\t\t\t\trc.stacks[stackName] = {file: stack.file}\n\t\t\t} else {\n\t\t\t\tdefaultsDeep(swizzleJson.stacks, entry)\n\t\t\t}\n\t\t})\n\t}\n\tif (Object.keys(rc.stacks).length === 0) {\n\t\tdelete rc.stacks\n\t} else {\n\t\t// todo handle merged rc files from ~ and . locations\n\t\tconst rcFile = rc.filePath || '.swizzlerc'\n\t\twriteJsonFile({file: rcFile, json: rc})\n\t}\n\tif (!file) {\n\t\tfile = './swizzle.json'\n\t}\n\tif (Object.keys(swizzleJson.stacks).length === 0) {\n\t\tdelete swizzleJson.stacks\n\t}\n\twriteJsonFile({file, json: swizzleJson})\n}\n\nexport function loadSwizzleConfig({file, rc}) {\n\tif (isFile(file)) {\n\t\tconst swizzleJson = defaultsDeep(defaultConf(), readJsonFile({file}))\n\t\tswizzleJson.stacks = loadStacksFromJsonFile({file})\n\t\tswizzleJson.stacks = defaultsDeep({}, rc.stacks, swizzleJson.stacks)\n\t\tswizzleJson.rc = omit(rc, 'stacks');\n\t\tswizzleJson.filePath = file\n\t\treturn swizzleJson\n\t}\n\tconst swizzleJson = defaultConf()\n\tswizzleJson.stacks = defaultsDeep({}, rc.stacks)\n\treturn swizzleJson\n}\n\nexport function loadStacksFromJsonFile({file}) {\n\tconst json = readJsonFile({file})\n\tconst stacks = json.stacks ? json.stacks : {}\n\treturn Object.keys(stacks).reduce((map, stackName) => {\n\t\tconst stack = stacks[stackName]\n\t\tif (stack.file) {\n\t\t\tconst stacksFile = readJsonFile({file: stack.file})\n\t\t\tconst update = Object.keys(stacksFile.stacks).reduce((map, stackName) => {\n\t\t\t\tconst params = stacksFile.stacks[stackName]\n\t\t\t\tconst entry = {[stackName]: {params, file: stack.file}}\n\t\t\t\treturn defaultsDeep(entry, map)\n\t\t\t}, {})\n\t\t\treturn defaultsDeep(map, update)\n\t\t} else {\n\t\t\tconst params = stack.params ? stack.params : stack\n\t\t\tconst entry = {[stackName]: {params, file}}\n\t\t\treturn defaultsDeep(entry, map)\n\t\t}\n\t}, {})\n}\n\nexport function loadRcConfig({rcFiles}) {\n\tconst rc = {stacks: {}}\n\tif (!(rcFiles || rcFiles.length === 0)) {\n\t\treturn rc\n\t}\n\trcFiles.reduce((rc, file) => {\n\t\tif (isFile(file)) {\n\t\t\tif (/^~\\//.test(file)) {\n\t\t\t\tfile = path.resolve(home(), file.replace(/^~\\//, ''))\n\t\t\t}\n\t\t\trc.file = file\n\t\t\t// todo to support merging of rc files ...\n\t\t\t// need to keep the stacks with their rc\n\t\t\t// for now only use / allow one rc file\n\t\t\t// if multiple are give the last one wins\n\t\t\treturn defaultsDeep(rc, loadStacksFromJsonFile({file}))\n\t\t}\n\t\treturn rc\n\t}, rc.stacks)\n\treturn rc\n}\n\nexport function readJsonFile({file}) {\n\treturn JSON.parse(fs.readFileSync(file, 'utf8'))\n}\n\nexport function writeJsonFile({file, json}) {\n\treturn fsx.outputJsonSync(file, json, {spaces: '\\t'})\n}\n\nexport function getRcFilePathsIfExists() {\n\tconst paths = []\n\tconst localRc = path.resolve(process.cwd(), '.swizzlerc')\n\tif (isFile(localRc)) {\n\t\tpaths.push(localRc)\n\t}\n\tconst homeRc = path.resolve(home(), '.swizzlerc');\n\tif (isFile(homeRc)) {\n\t\tpaths.push(homeRc)\n\t}\n\treturn paths\n}\n\nexport function getSwizzleJsonFilePath() {\n\treturn path.resolve(process.cwd(), 'swizzle.json')\n}\n\nexport const sfs = {\n\tisFile,\n\tswizzleSourceFiles,\n\tsaveSwizzleConfig,\n\tloadSwizzleConfig,\n\tloadRcConfig,\n\treadJsonFile,\n\twriteJsonFile,\n\tgetRcFilePathsIfExists,\n\tgetSwizzleJsonFilePath\n}\n"]}