{"version":3,"sources":["../src/swizzle-config.js"],"names":["keyCase","text","toUpperCase","descCase","toLowerCase","replace","defaultConf","rc","files","params","stacks","filePath","SwizzleConfig","swizzleJson","state","Object","assign","conf","actions","addFiles","removeFiles","name","desc","defaultValue","generated","description","addParam","removeParam","file","addStack","removeStack","verbose","reduce","list","param","push","keys","stackName","filter","d","map","type","TypeError","action","concat","find","findFile","existingParam","newParam"],"mappings":"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","file":"swizzle-config.js","sourcesContent":["import snakeCase from 'lodash.snakecase'\nimport unique from 'lodash.uniq'\nimport omit from 'lodash.omit'\n\n/**\n no file system operations, state changes only\n **/\n\nexport const keyCase = (text) => snakeCase(text).toUpperCase()\nexport const descCase = (text) => snakeCase(text).toLowerCase().replace(/_/g, ' ')\n\nexport const defaultConf = () => ({\n\trc: {},\n\tfiles: [],\n\tparams: [],\n\tstacks: {},\n\tfilePath: './swizzle.json'\n})\n\nexport class SwizzleConfig {\n\n\tconstructor(swizzleJson) {\n\t\tthis.state = Object.assign(defaultConf(), swizzleJson)\n\t}\n\n\tget stackName() {\n\t\treturn this.state.stackName\n\t}\n\n\tset stackName(name) {\n\t\tthis.state.stackName = name\n\t}\n\n\tget files() {\n\t\treturn this.state.files.filter((d) => d)\n\t}\n\n\tget params() {\n\t\treturn this.state.params.map((param) => Object.assign({}, param))\n\t}\n\n\taddFiles({files}) {\n\t\tthis.state = conf(this.state, actions.addFiles(files))\n\t}\n\n\tremoveFiles({files}) {\n\t\tthis.state = conf(this.state, actions.removeFiles(files))\n\t}\n\n\taddParam({name, desc, defaultValue, generated, description}) {\n\t\t// support short or long name as a convenience\n\t\tdescription = description || desc\n\t\tthis.state = conf(this.state, actions.addParam(name, description, defaultValue, generated))\n\t}\n\n\tremoveParam({name}) {\n\t\tthis.state = conf(this.state, actions.removeParam(name))\n\t}\n\n\taddStack({name, params, file}) {\n\t\tthis.state = conf(this.state, actions.addStack(name, params, file))\n\t}\n\n\tremoveStack({name}) {\n\t\tthis.state = conf(this.state, actions.removeStack(name))\n\t}\n\n\tlistParams({verbose} = {verbose: false}) {\n\t\treturn this.state.params.reduce((list, param) => {\n\t\t\tif (verbose) {\n\t\t\t\tlist.push({name: param.name, description: param.description, defaultValue: param.defaultValue})\n\t\t\t} else {\n\t\t\t\tlist.push(param.name)\n\t\t\t}\n\t\t\treturn list\n\t\t}, [])\n\t}\n\n\tlistStacks({verbose} = {verbose: false}) {\n\t\treturn Object.keys(this.state.stacks).reduce((list, name) => {\n\t\t\tif (verbose) {\n\t\t\t\tlist.push(Object.assign({}, this.state.stacks[name]))\n\t\t\t} else {\n\t\t\t\tlist.push(name)\n\t\t\t}\n\t\t\treturn list\n\t\t}, [])\n\t}\n\n}\n\nconst actions = {\n\taddFiles(files) {\n\t\treturn {\n\t\t\ttype: 'add-files',\n\t\t\tfiles\n\t\t}\n\t},\n\tremoveFiles(files) {\n\t\treturn {\n\t\t\ttype: 'remove-files',\n\t\t\tfiles\n\t\t}\n\t},\n\taddParam(name, description, defaultValue, generated) {\n\t\tif (!name) {\n\t\t\tthrow new TypeError('a parameter name is required')\n\t\t}\n\t\treturn {\n\t\t\ttype: 'add-param',\n\t\t\tparam: {\n\t\t\t\tname,\n\t\t\t\tdescription,\n\t\t\t\tdefaultValue,\n\t\t\t\tgenerated\n\t\t\t}\n\t\t}\n\t},\n\tremoveParam(name) {\n\t\treturn {\n\t\t\ttype: 'remove-param',\n\t\t\tname\n\t\t}\n\t},\n\taddStack(name, params, file) {\n\t\treturn {\n\t\t\ttype: 'add-stack',\n\t\t\tname,\n\t\t\tparams,\n\t\t\tfile\n\t\t}\n\t},\n\tremoveStack(name) {\n\t\treturn {\n\t\t\ttype: 'remove-stack',\n\t\t\tname\n\t\t}\n\t}\n}\n\nfunction files(state, action) {\n\tswitch (action.type) {\n\t\tcase 'add-files':\n\t\t\treturn unique(state.concat(action.files))\n\t\tcase 'remove-files':\n\t\t\treturn state.filter((file) => !action.files.find((findFile) => file === findFile))\n\t}\n\treturn state\n}\n\nfunction params(state, action) {\n\n\tswitch (action.type) {\n\n\t\tcase 'add-param':\n\t\t\tconst existingParam = state.find((d) => d.name === action.param.name)\n\t\t\tconst {name, description, defaultValue, generated} = action.param\n\t\t\tconst newParam = {}\n\t\t\tif (existingParam) {\n\t\t\t\t// update an existing parameter\n\t\t\t\tObject.assign(newParam, existingParam)\n\t\t\t\tif (typeof description !== 'undefined') {\n\t\t\t\t\tnewParam.description = description\n\t\t\t\t}\n\t\t\t\tif (typeof defaultValue !== 'undefined') {\n\t\t\t\t\tnewParam.defaultValue = defaultValue\n\t\t\t\t}\n\t\t\t\tif (typeof generated !== 'undefined') {\n\t\t\t\t\tnewParam.generated = generated\n\t\t\t\t}\n\t\t\t\tif (newParam.generated !== true) {\n\t\t\t\t\tdelete newParam.generated\n\t\t\t\t}\n\t\t\t\treturn state.map((param) => {\n\t\t\t\t\tif (param.name === name) {\n\t\t\t\t\t\treturn newParam\n\t\t\t\t\t}\n\t\t\t\t\treturn param\n\t\t\t\t})\n\t\t\t}\n\t\t\t// adding a new parameter\n\t\t\tObject.assign(newParam, {name, description, defaultValue, generated})\n\t\t\tif (typeof newParam.description === 'undefined') {\n\t\t\t\tnewParam.description = descCase(`Your-${action.param.name}`)\n\t\t\t}\n\t\t\tif (typeof newParam.defaultValue === 'undefined') {\n\t\t\t\tif (newParam.generated === true) {\n\t\t\t\t\tnewParam.defaultValue = 'generated'\n\t\t\t\t} else {\n\t\t\t\t\tnewParam.defaultValue = keyCase(`Your-${action.param.name}`)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (newParam.generated !== true) {\n\t\t\t\tdelete newParam.generated\n\t\t\t}\n\t\t\treturn state.concat(newParam)\n\n\t\tcase 'remove-param':\n\t\t\treturn state.filter((d) => d.name !== action.name)\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n\n}\n\nfunction stacks(state, action) {\n\tswitch (action.type) {\n\t\tcase 'add-stack':\n\t\t\treturn Object.assign({}, state, {[action.name]: {params: action.params, file: action.file || ''}})\n\t\tcase 'remove-stack':\n\t\t\treturn omit(state, action.name)\n\t}\n\treturn state\n}\n\nfunction conf(state, action) {\n\tswitch (action.type) {\n\t\tcase 'add-files':\n\t\tcase 'remove-files':\n\t\t\treturn Object.assign(state, {files: files(state.files, action)})\n\t\tcase 'add-param':\n\t\tcase 'remove-param':\n\t\t\treturn Object.assign(state, {params: params(state.params, action)})\n\t\tcase 'add-stack':\n\t\tcase 'remove-stack':\n\t\t\treturn Object.assign(state, {stacks: stacks(state.stacks, action)})\n\t}\n\treturn state\n}\n"]}