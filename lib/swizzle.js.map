{"version":3,"sources":["../src/swizzle.js"],"names":["initializeConfig","sfs","rcFile","getRcFilePathsIfExists","rc","loadRcConfig","rcFiles","swizzleFilePath","getSwizzleJsonFilePath","conf","loadSwizzleConfig","file","Swizzle","addParam","name","desc","defaultValue","generated","param","fs","saveSwizzleConfig","state","updateGeneratedParams","generatedParams","Object","keys","length","lastStack","stackName","stack","stacks","forEach","existingParam","params","find","p","assign","addStack","swizzleStack","removeParam","console","log","addFiles","files","removeFiles","swizzleStackInit","options","prompts","message","default","prompt","then","answers","catch","error","swizzleStackConfig","input","Promise","resolve","reject","editFirst","useRc","questions","reduce","list","hasParam","askUser","description","push","swizzleSourceFiles","e","clean","verbose","listParams","map","filePath","exports"],"mappings":"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","file":"swizzle.js","sourcesContent":["import inquirer from 'inquirer'\nimport {SwizzleConfig} from './config'\nimport {sfs as swizzleFileSystem} from './file-system'\n\n// todo remove-param notifies which code files use this param\n// todo add input validations to the add-param command\n// todo inject inquirer into class so we can test w/o prompting\n\nfunction initializeConfig(sfs) {\n\t// only uses ~/.swizzlerc or ./.swizzlerc - no merging yet\n\tconst rcFile = sfs.getRcFilePathsIfExists()\n\tconst rc = rcFile ? sfs.loadRcConfig({rcFiles: [rcFile]}) : {}\n\tconst swizzleFilePath = sfs.getSwizzleJsonFilePath()\n\tconst conf = new SwizzleConfig(sfs.loadSwizzleConfig({file: swizzleFilePath, rc}))\n\treturn conf\n}\n\nclass Swizzle {\n\n\tconstructor(conf = null, sfs = swizzleFileSystem) {\n\t\tif (conf instanceof SwizzleConfig) {\n\t\t\tthis.conf = conf\n\t\t} else {\n\t\t\tthis.conf = initializeConfig(sfs)\n\t\t}\n\t\tthis.fs = sfs\n\t}\n\n\tget swizzleFilePath() {\n\t\treturn this.conf.state.filePath\n\t}\n\n\taddParam = ({name, desc, defaultValue, generated}) => {\n\t\tconst param = {name, desc, defaultValue, generated}\n\t\tthis.conf.addParam(param)\n\t\tthis.fs.saveSwizzleConfig({file: this.swizzleFilePath, conf: this.conf.state})\n\t}\n\n\tupdateGeneratedParams = (generatedParams) => {\n\n\t\tif (!(generatedParams && Object.keys(generatedParams).length)) {\n\t\t\treturn\n\t\t}\n\n\t\tconst lastStack = this.conf.stackName\n\n\t\tconst stack = this.conf.state.stacks[lastStack]\n\t\tlet saveSwizzleConfig = false\n\t\tObject.keys(generatedParams).forEach((name) => {\n\t\t\tconst generated = true\n\t\t\tconst existingParam = this.conf.state.params.find((p) => p.name === name)\n\t\t\tif (!existingParam) {\n\t\t\t\tsaveSwizzleConfig = true\n\t\t\t\tthis.conf.addParam({name, generated})\n\t\t\t}\n\t\t})\n\n\t\tif (saveSwizzleConfig) {\n\t\t\tthis.fs.saveSwizzleConfig({file: this.swizzleFilePath, conf: this.conf.state})\n\t\t}\n\n\t\tif (!stack) {\n\t\t\t// there is no stack to swizzle\n\t\t\t// todo determine which use cases would hit this and\n\t\t\t// what the right response should be....\n\t\t\treturn\n\t\t}\n\n\t\tconst params = {}\n\t\tObject.assign(params, stack.params, generatedParams)\n\t\tthis.conf.addStack({name: lastStack, params, file: stack.file})\n\t\tthis.swizzleStack(lastStack, {})\n\n\t}\n\n\tremoveParam = ({name}) => {\n\t\t// todo notify which code files use this param\n\t\tconst param = {name}\n\t\tconst removeParam = this.conf.state.params.find((p) => p.name === name)\n\t\tif (!removeParam) {\n\t\t\tconsole.log('param name is not found in swizzle config', name, this.swizzleFilePath)\n\t\t}\n\t\tthis.conf.removeParam(param)\n\t\tthis.fs.saveSwizzleConfig({file: this.swizzleFilePath, conf: this.conf.state})\n\t}\n\n\taddFiles = ({files}) => {\n\t\tthis.conf.addFiles({files})\n\t\tthis.fs.saveSwizzleConfig({file: this.swizzleFilePath, conf: this.conf.state})\n\t}\n\n\tremoveFiles = ({files}) => {\n\t\tthis.conf.removeFiles({files})\n\t\tthis.fs.saveSwizzleConfig({file: this.swizzleFilePath, conf: this.conf.state})\n\t}\n\n\tswizzleStackInit = (options) => {\n\n\t\tconst lastStack = this.conf.stackName\n\n\t\tconst prompts = [{\n\t\t\tname: 'name',\n\t\t\tmessage: 'enter stack name',\n\t\t\tdefault: lastStack || 'dev'\n\t\t}]\n\n\t\tinquirer.prompt(prompts)\n\t\t\t.then((answers) => {\n\t\t\t\tthis.swizzleStack(answers.name, options)\n\t\t\t})\n\t\t\t.catch(console.error)\n\t}\n\n\tswizzleStackConfig = (options) => {\n\n\t\tconst lastStack = this.conf.stackName\n\n\t\tconst input = new Promise((resolve, reject) => {\n\t\t\tif (lastStack) {\n\t\t\t\tresolve(lastStack)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconst prompts = [{\n\t\t\t\tname: 'name',\n\t\t\t\tmessage: 'enter stack name',\n\t\t\t\tdefault: 'dev'\n\t\t\t}]\n\n\t\t\tinquirer.prompt(prompts)\n\t\t\t\t.then((answers) => {\n\t\t\t\t\tresolve(answers.name)\n\t\t\t\t})\n\t\t\t\t.catch(reject)\n\n\t\t})\n\n\t\tinput.then((stackName) => this.swizzleStack(stackName, options)).catch(console.error)\n\n\t}\n\n\tswizzleStack = (name, {editFirst, useRc, file}) => {\n\n\t\tconst params = this.conf.state.params\n\t\tconst stack = this.conf.state.stacks[name] || {\n\t\t\tfile: this.swizzleFilePath,\n\t\t\tparams: {}\n\t\t}\n\n\t\tif (useRc) {\n\t\t\tstack.file = '.swizzlerc'\n\t\t}\n\n\t\tif (file) {\n\t\t\tstack.file = file\n\t\t}\n\n\t\tconst questions = params.reduce((list, param) => {\n\t\t\tconst hasParam = !!stack.params[param.name]\n\t\t\tconst askUser = editFirst || !(hasParam || param.generated)\n\t\t\tif (askUser) {\n\t\t\t\tconst name = param.name\n\t\t\t\tconst message = `enter ${param.description}${param.generated ? ' <generated>' : ''}`\n\t\t\t\tconst defaultValue = stack.params[name] ? stack.params[name] : param.defaultValue\n\t\t\t\tlist.push({\n\t\t\t\t\tname,\n\t\t\t\t\tmessage,\n\t\t\t\t\tdefault: defaultValue\n\t\t\t\t})\n\t\t\t}\n\t\t\treturn list\n\t\t}, [])\n\n\t\tconst input = new Promise((resolve, reject) => {\n\t\t\tif (stack.params && Object.keys(stack.params).length)\n\t\t\t\tif (questions.length === 0) {\n\t\t\t\t\treturn resolve(stack)\n\t\t\t\t}\n\t\t\tinquirer.prompt(questions)\n\t\t\t\t.then((answers) => {\n\t\t\t\t\tObject.assign(stack.params, answers)\n\t\t\t\t\treturn stack\n\t\t\t\t})\n\t\t\t\t.then(resolve)\n\t\t\t\t.catch(reject)\n\t\t})\n\n\t\tinput.then((stack) => {\n\t\t\tthis.conf.addStack({name, params: stack.params, file: stack.file})\n\t\t\tthis.conf.stackName = name\n\t\t\tthis.fs.saveSwizzleConfig({conf: this.conf.state, file: this.swizzleFilePath})\n\t\t\treturn stack.params\n\t\t}).then((params) => {\n\t\t\tif (this.conf.files.length === 0) {\n\t\t\t\tconsole.log('nothing to swizzle: no files specified in swizzle.json')\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.fs.swizzleSourceFiles({params, files: this.conf.files})\n\t\t}).catch((e) => console.error(e))\n\n\t}\n\n\tclean = ({verbose}) => {\n\t\tconst params = this.conf.listParams({verbose: true}).reduce((map, param) => {\n\t\t\tmap[param.name] = param.defaultValue || ''\n\t\t\treturn map\n\t\t}, {})\n\t\tthis.fs.swizzleSourceFiles({params, files: this.conf.files})\n\t\tconst file = this.conf.swizzleFilePath\n\t\tdelete this.conf.state.stacks\n\t\tdelete this.conf.state.stackName\n\t\tthis.fs.saveSwizzleConfig({conf: this.conf.state, file})\n\t\tif (verbose) {\n\t\t\tconsole.log(params)\n\t\t}\n\t}\n\n}\n\nexports.Swizzle = Swizzle\n"]}